{"version":3,"sources":["api/users.js","api/categories.js","App.jsx","api/products.js","index.jsx"],"names":["id","name","sex","title","icon","ownerId","products","categoryId","map","product","category","categoriesFromServer","find","categ","user","usersFromServer","person","App","useState","selectedOwner","setSelectedOwners","query","setQuery","catSelected","setCatSelected","isReversed","setIsReversed","sortBy","setSortBy","filteredByName","filter","normalizeQuery","trim","toLowerCase","includes","length","showTheTable","Boolean","sortedProdutsList","filteredProducts","sortType","sortedProducts","sort","prev","next","localeCompare","Error","reverse","getSortedProducts","className","href","classNames","value","onClick","type","placeholder","onChange","event","currentTarget","catId","newCatId","newCatSelected","handleCategory","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5db717de.chunk.js","sourcesContent":["export default [\n  { id: 1, name: 'Roma', sex: 'm' },\n  { id: 2, name: 'Anna', sex: 'f' },\n  { id: 3, name: 'Max', sex: 'm' },\n  { id: 4, name: 'John', sex: 'm' },\n];\n","export default [\n  {\n    id: 1,\n    title: 'Grocery',\n    icon: '🍞',\n    ownerId: 2,\n  },\n  {\n    id: 2,\n    title: 'Drinks',\n    icon: '🍺',\n    ownerId: 1,\n  },\n  {\n    id: 3,\n    title: 'Fruits',\n    icon: '🍏',\n    ownerId: 2,\n  },\n  {\n    id: 4,\n    title: 'Electronics',\n    icon: '💻',\n    ownerId: 1,\n  },\n  {\n    id: 5,\n    title: 'Clothes',\n    icon: '👚',\n    ownerId: 3,\n  },\n];\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport categoriesFromServer from './api/categories';\nimport productsFromServer from './api/products';\n\nconst products = productsFromServer.map((product) => {\n  const category = categoriesFromServer\n    .find(categ => categ.id === product.categoryId) || null;\n\n  const user = usersFromServer\n    .find(person => person.id === category.ownerId) || null;\n\n  return {\n    ...product,\n    category,\n    user,\n  };\n});\n\nconst getSortedProducts = (\n  filteredProducts,\n  sortType,\n  isReversed,\n) => {\n  const sortedProducts = filteredProducts.sort((prev, next) => {\n    switch (sortType) {\n      case '':\n        return 0;\n\n      case 'id':\n        return prev.id - next.id;\n\n      case 'product':\n        return prev.name.localeCompare(next.name);\n\n      case 'category':\n        return prev.category.title.localeCompare(next.category.title);\n\n      case 'user':\n        return prev.user.name.localeCompare(next.user.name);\n\n      default:\n        throw new Error(`Unknown sort type - ${sortType}`);\n    }\n  });\n\n  return isReversed\n    ? sortedProducts.reverse()\n    : sortedProducts;\n};\n\nexport const App = () => {\n  const [selectedOwner, setSelectedOwners] = useState('');\n  const [query, setQuery] = useState('');\n  const [catSelected, setCatSelected] = useState([]);\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortBy, setSortBy] = useState('');\n\n  const handleSelectAll = () => {\n    setCatSelected([]);\n  };\n\n  const handleCategory = (catId) => {\n    const newCatId = catId;\n\n    if (catSelected.includes(catId)) {\n      const newCatSelected = catSelected.filter(id => id !== catId);\n\n      setCatSelected(newCatSelected);\n    } else {\n      setCatSelected([\n        ...catSelected,\n        newCatId,\n      ]);\n    }\n  };\n\n  const handleReset = () => {\n    setSelectedOwners('');\n    setQuery('');\n    setCatSelected([]);\n  };\n\n  const handleQuery = (event) => {\n    setQuery(event.currentTarget.value);\n  };\n\n  const visibleProduct = products.filter((product) => {\n    const normalizeQuery = query.trim().toLowerCase();\n    const normalizeNameProduct = product.name.toLowerCase();\n\n    return normalizeNameProduct.includes(normalizeQuery);\n  });\n\n  const filteredByCategories = visibleProduct.filter((product) => {\n    const { categoryId } = product;\n\n    return catSelected.length > 0\n      ? catSelected.includes(categoryId)\n      : products;\n  });\n\n  const filteredByName = filteredByCategories.filter((product) => {\n    const { user } = product;\n\n    return selectedOwner\n      ? user.id === selectedOwner\n      : products;\n  });\n\n  const showTheTable = Boolean(filteredByName.length);\n\n  const sortedProdutsList\n    = getSortedProducts(filteredByName, sortBy, isReversed);\n\n  return (\n    <div className=\"section\">\n      <div className=\"container\">\n        <h1 className=\"title\">Product Categories</h1>\n\n        <div className=\"block\">\n          <nav className=\"panel\">\n            <p className=\"panel-heading\">Filters</p>\n\n            <p className=\"panel-tabs has-text-weight-bold\">\n              <a\n                data-cy=\"FilterAllUsers\"\n                href=\"#/\"\n                className={classNames(\n                  {\n                    'is-active': selectedOwner === '',\n                  },\n                )}\n                value={selectedOwner}\n                onClick={() => setSelectedOwners('')}\n              >\n                All\n              </a>\n\n              {usersFromServer.map((user) => {\n                const {\n                  id,\n                  name,\n                } = user;\n\n                return (\n                  <a\n                    data-cy=\"FilterUser\"\n                    href=\"#/\"\n                    key={id}\n                    className={classNames(\n                      {\n                        'is-active': selectedOwner === id,\n                      },\n                    )}\n                    value={id}\n                    onClick={() => setSelectedOwners(id)}\n                  >\n                    {name}\n                  </a>\n                );\n              })}\n            </p>\n\n            <div className=\"panel-block\">\n              <p className=\"control has-icons-left has-icons-right\">\n                <input\n                  data-cy=\"SearchField\"\n                  type=\"text\"\n                  className=\"input\"\n                  placeholder=\"Search\"\n                  value={query}\n                  onChange={handleQuery}\n                />\n\n                <span className=\"icon is-left\">\n                  <i className=\"fas fa-search\" aria-hidden=\"true\" />\n                </span>\n\n                {query && (\n                  <span className=\"icon is-right\">\n                    <button\n                      data-cy=\"ClearButton\"\n                      type=\"button\"\n                      className=\"delete\"\n                      onClick={() => setQuery('')}\n                    />\n                  </span>\n                )}\n              </p>\n            </div>\n\n            <div className=\"panel-block is-flex-wrap-wrap\">\n              <a\n                href=\"#/\"\n                data-cy=\"AllCategories\"\n                // className=\"button is-success mr-6 is-outlined\"\n                className={classNames(\n                  'button is-success mr-6',\n                  {\n                    'is-outlined': !(catSelected.length === 0),\n                  },\n                )}\n                onClick={handleSelectAll}\n              >\n                All\n              </a>\n\n              {categoriesFromServer.map((categ) => {\n                const {\n                  id,\n                  title,\n                } = categ;\n\n                return (\n                  <a\n                    data-cy=\"Category\"\n                    className={classNames(\n                      'button mr-2 my-1',\n                      {\n                        'is-info': catSelected.includes(id),\n                      },\n                    )}\n                    href=\"#/\"\n                    key={id}\n                    onClick={() => handleCategory(id)}\n                  >\n                    {title}\n                  </a>\n                );\n              })}\n            </div>\n\n            <div className=\"panel-block\">\n              <a\n                data-cy=\"ResetAllButton\"\n                href=\"#/\"\n                className=\"button is-link is-outlined is-fullwidth\"\n                onClick={handleReset}\n              >\n                Reset all filters\n              </a>\n            </div>\n          </nav>\n        </div>\n\n        <div className=\"box table-container\">\n          {!showTheTable && (\n            <p data-cy=\"NoMatchingMessage\">\n              No products matching selected criteria\n            </p>\n          )}\n\n          {showTheTable && (\n            <table\n              data-cy=\"ProductTable\"\n              className=\"table is-striped is-narrow is-fullwidth\"\n            >\n              <thead>\n                <tr>\n                  <th>\n                    <span\n                      className=\"is-flex is-flex-wrap-nowrap\"\n                    >\n                      ID\n\n                      <a\n                        href=\"#/\"\n                        onClick={() => {\n                          if (sortBy !== 'id') {\n                            setSortBy('id');\n                            setIsReversed(false);\n                          }\n\n                          if (sortBy === 'id' && !isReversed) {\n                            setIsReversed(true);\n                          }\n\n                          if (sortBy === 'id' && isReversed) {\n                            setSortBy('');\n                            setIsReversed(false);\n                          }\n                        }}\n                      >\n                        <span className=\"icon\">\n                          <i\n                            data-cy=\"SortIcon\"\n                            className={classNames(\n                              'fas',\n                              {\n                                'fa-sort': sortBy !== 'id',\n                                'fa-sort-up': sortBy === 'id' && !isReversed,\n                                'fa-sort-down': sortBy === 'id' && isReversed,\n                              },\n                            )}\n                          />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Product\n\n                      <a\n                        href=\"#/\"\n                        onClick={() => {\n                          if (sortBy !== 'product') {\n                            setSortBy('product');\n                            setIsReversed(false);\n                          }\n\n                          if (sortBy === 'product' && !isReversed) {\n                            setIsReversed(true);\n                          }\n\n                          if (sortBy === 'product' && isReversed) {\n                            setSortBy('');\n                            setIsReversed(false);\n                          }\n                        }}\n                      >\n                        <span className=\"icon\">\n                          <i\n                            data-cy=\"SortIcon\"\n                            className={classNames(\n                              'fas',\n                              {\n                                'fa-sort': sortBy !== 'product',\n                                'fa-sort-up': (\n                                  sortBy === 'product' && !isReversed\n                                ),\n                                'fa-sort-down': (\n                                  sortBy === 'product' && isReversed\n                                ),\n                              },\n                            )}\n                          />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      Category\n\n                      <a\n                        href=\"#/\"\n                        onClick={() => {\n                          if (sortBy !== 'category') {\n                            setSortBy('category');\n                            setIsReversed(false);\n                          }\n\n                          if (sortBy === 'category' && !isReversed) {\n                            setIsReversed(true);\n                          }\n\n                          if (sortBy === 'category' && isReversed) {\n                            setSortBy('');\n                            setIsReversed(false);\n                          }\n                        }}\n                      >\n                        <span className=\"icon\">\n                          <i\n                            data-cy=\"SortIcon\"\n                            className={classNames(\n                              'fas',\n                              {\n                                'fa-sort': sortBy !== 'product',\n                                'fa-sort-up': (\n                                  sortBy === 'category' && !isReversed\n                                ),\n                                'fa-sort-down': (\n                                  sortBy === 'category' && isReversed\n                                ),\n                              },\n                            )}\n                          />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n\n                  <th>\n                    <span className=\"is-flex is-flex-wrap-nowrap\">\n                      User\n\n                      <a\n                        href=\"#/\"\n                        onClick={() => {\n                          if (sortBy !== 'user') {\n                            setSortBy('user');\n                            setIsReversed(false);\n                          }\n\n                          if (sortBy === 'user' && !isReversed) {\n                            setIsReversed(true);\n                          }\n\n                          if (sortBy === 'user' && isReversed) {\n                            setSortBy('');\n                            setIsReversed(false);\n                          }\n                        }}\n                      >\n                        <span className=\"icon\">\n                          <i\n                            data-cy=\"SortIcon\"\n                            className={classNames(\n                              'fas',\n                              {\n                                'fa-sort': sortBy !== 'user',\n                                'fa-sort-up': sortBy === 'user' && !isReversed,\n                                'fa-sort-down': (\n                                  sortBy === 'user' && isReversed\n                                ),\n                              },\n                            )}\n                          />\n                        </span>\n                      </a>\n                    </span>\n                  </th>\n                </tr>\n              </thead>\n\n              <tbody>\n                {sortedProdutsList.map((product) => {\n                  const {\n                    id,\n                    name,\n                    category,\n                    user,\n                  } = product;\n\n                  return (\n                    <tr\n                      data-cy=\"Product\"\n                      key={id}\n                    >\n                      <td\n                        className=\"has-text-weight-bold\"\n                        data-cy=\"ProductId\"\n                      >\n                        {id}\n                      </td>\n\n                      <td data-cy=\"ProductName\">\n                        {name}\n                      </td>\n\n                      <td data-cy=\"ProductCategory\">\n                        <span>{category.icon}</span>\n                        {' - '}\n                        {category.title}\n                      </td>\n\n                      <td\n                        data-cy=\"ProductUser\"\n                        className={classNames(\n                          {\n                            'has-text-link': user.sex === 'm',\n                          },\n                          {\n                            'has-text-danger': user.sex === 'f',\n                          },\n                        )}\n                      >\n                        {user.name}\n                      </td>\n                    </tr>\n                  );\n                })}\n              </tbody>\n            </table>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Milk',\n    categoryId: 2,\n  },\n  {\n    id: 2,\n    name: 'Bread',\n    categoryId: 1,\n  },\n  {\n    id: 3,\n    name: 'Eggs',\n    categoryId: 1,\n  },\n  {\n    id: 4,\n    name: 'Jacket',\n    categoryId: 5,\n  },\n  {\n    id: 5,\n    name: 'Sugar',\n    categoryId: 1,\n  },\n  {\n    id: 6,\n    name: 'Banana',\n    categoryId: 3,\n  },\n  {\n    id: 7,\n    name: 'Beer',\n    categoryId: 2,\n  },\n  {\n    id: 8,\n    name: 'Socks',\n    categoryId: 5,\n  },\n  {\n    id: 9,\n    name: 'Apples',\n    categoryId: 3,\n  },\n];\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}